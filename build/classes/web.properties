#*****************************web系统配置开始****************************

defaultLocale = zh_CN
defaultThemeName = default

#******************************数据库配置开始**********************************

#数据库访问对象。如：1.Postgres 2.Oracle 3.DB2 4.MySQL
#ess.db.type=Oracle

cippus.db.type=MySQL

#可以加载不同的数据源：dbcp/c3p0/jndi/sJndi/jdbc ...
db.dataSource.type=dbcp

#数据源对象
#dbcp
db.dataBaseClassName=org.apache.commons.dbcp.BasicDataSource
#c3p0
#db.dataBaseClassName=com.mchange.v2.c3p0.ComboPooledDataSource
#jdbc
#db.dataBaseClassName=org.springframework.jdbc.datasource.DriverManagerDataSource
#spring jndi
#db.dataBaseClassName=org.springframework.jndi.JndiObjectFactoryBean
#jndi
#db.dataBaseClassName=cn.com.higinet.rapid.base.datasource.JndiDataSource


#postgres数据库参数
#db.driverClassName=org.postgresql.Driver
#db.url=jdbc:postgresql://10.8.1.121:5432/ess51
#db.username=postgres
#db.password=postgres
#db.testQurey=select current_timestamp

#oracle数据库参数
#db.driverClassName=oracle.jdbc.driver.OracleDriver
#db.url=jdbc:oracle:thin:@localhost:1521:orcl
#db.username=java
#db.password=java1234
#db.testQurey=SELECT 1 from dual

#MySQL数据库参数
db.driverClassName=com.mysql.jdbc.Driver
db.url=jdbc:mysql://localhost/db_cippus?useUnicode=true&characterEncoding=utf8
db.username=root
db.password=123456
db.testQurey=SELECT 1 from dual

#DB2数据库参数
#db.driverClassName=com.ibm.db2.jcc.DB2Driver
#db.url=jdbc:db2://10.8.1.121:50000/ess
#db.username=$[0xedacc95609cf8a50]
#db.password=$[0xd6565ade196b19b6]
#db.testQurey=select current timestamp from sysibm.sysdummy1

db.jndiName=jndi/joa

#**************************数据库配置结束****************************************

#***************************以下内容最好不要修改**********************************

############################c3p0配置文件
															
c3p0.driverClass=${db.driverClassName}										
c3p0.jdbcUrl=${db.url}														
c3p0.user=${db.username}													
c3p0.password=${db.password}

#maxIdleTime：最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0；												
c3p0.maxIdleTime=10
#maxPoolSize：连接池中保留的最大连接数。默认为15； 															
c3p0.maxPoolSize=10
#maxStatements：JDBC的标准参数，用以控制数据源内加载的PreparedStatement数量。
#但由于预缓存的Statement属 于单个Connection而不是整个连接池。
#所以设置这个参数需要考虑到多方面的因素，如果maxStatements与 maxStatementsPerConnection均为0，则缓存被关闭。默认为0； 															
c3p0.maxStatements=0
#maxStatementsPerConnection：连接池内单个连接所拥有的最大缓存Statement数。默认为0； 
c3p0.maxStatementsPerConnection=20
#maxPoolSize：连接池中保留的最小连接数；
c3p0.minPoolSize=3
#initialPoolSize：初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值。默认为3
c3p0.initialPoolSize=3
#当连接池中的连接用完时，C3P0一次性创建新连接的数目； 
c3p0.acquireIncrement=3
#idleConnectionTestPeriod：隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查； 
c3p0.idleConnectionTestPeriod=1800
#定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30
c3p0.acquireRetryAttempts=3
#breakAfterAcquireFailure：获取连接失败将会引起所有等待获取连接的线程抛出异常。
#但是数据源仍有效保留，并在下次调 用getConnection()的时候继续尝试获取连接。如果设为true，
#那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。默认为 false
c3p0.breakAfterAcquireFailure=false
c3p0.testConnectionOnCheckout=false
#acquireRetryDelay：两次连接中间隔时间，单位毫秒，默认为1000； 
c3p0.acquireRetryDelay=100
#preferredTestQuery：定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个参数能显著提高测试速度。
#测试的表必须在初始数据源的时候就存在。默认为null；
c3p0.preferredTestQuery=${db.testQurey}
#autoCommitOnClose：连接关闭时默认将所有未提交的操作回滚。默认为false； 
c3p0.autoCommitOnClose=true
#checkoutTimeout：当连接池用完时客户端调用getConnection()后等待获取新连接的时间，
#超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0；
c3p0.checkoutTimeout=5000
c3p0.maxIdleTimeExcessConnections=1800
#numHelperThreads：C3P0是异步操作的，缓慢的JDBC操作通过帮助进程完成。
#扩展这些操作可以有效的提升性能，通过多线程实现多个操作同时被执行。默认为3； 
c3p0.numHelperThreads=3

############################dbcp配置文件

dbcp.driverClassName=${db.driverClassName}
dbcp.url=${db.url}
dbcp.username=${db.username}
dbcp.password=${db.password}

#最大活动连接:连接池在同一时间能够分配的最大活动连接的数量, 如果设置为非正数则表示不限制
dbcp.maxActive=50
#最大空闲连接:连接池中容许保持空闲状态的最大连接数量,超过的空闲连接将被释放,如果设置为负数表示不限制
dbcp.maxIdle=10
#最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),超过时间则抛出异常,如果设置为-1表示无限等待
dbcp.maxWait=5000
#初始化连接:连接池启动时创建的初始化连接数量,1.2版本后支持
dbcp.initialSize=5
#最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,如果设置为0则不创建
dbcp.minIdle=5
#标记是否删除泄露的连接,如果他们超过了removeAbandonedTimout的限制.如果设置为true, 连接被认为是被泄露并且可以被删除,如果空闲时间超过removeAbandonedTimeout. 设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接.
dbcp.removeAbandoned=true
#泄露的连接可以被删除的超时值, 单位秒
dbcp.removeAbandonedTimeout = 300
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
dbcp.testWhileIdle=true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
dbcp.testOnBorrow=false
# 指明是否在归还到池中前进行检验
dbcp.testOnReturn=false
#SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
#dbcp.validationQuery=select current_timestamp
dbcp.validationQuery=${db.testQurey}
#在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. 如果设置为非正数,则不运行空闲连接回收器线程
dbcp.timeBetweenEvictionRunsMillis=30000
#在每次空闲连接回收器线程(如果有)运行时检查的连接数量
dbcp.numTestsPerEvictionRun=20
#连接在池中保持空闲而不被空闲连接回收器线程(如果有)回收的最小时间值，单位毫秒

#################################JDBC配置
jdbc.driverClassName=${db.driverClassName}
jdbc.url=${db.url}
jdbc.username=${db.username}
jdbc.password=${db.password}

jndi.getInstance=java:comp/env/${db.jndiName}

sJndi.jndiName=java:comp/env/${db.jndiName}

#*************************************************************************
